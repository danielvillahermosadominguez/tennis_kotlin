/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.tennis

import io.mockk.every
import io.mockk.mockk
import io.mockk.verify
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Assertions.assertNotNull
import org.junit.jupiter.api.Test
import org.junit.jupiter.params.ParameterizedTest
import org.junit.jupiter.params.provider.ValueSource


class AppTest {
    @Test
    fun `greeting`() {
        val classUnderTest = App()
        assertNotNull(classUnderTest.greeting, "app should have a greeting")
    }
    @Test fun `greeting with assertJ`() {
        val classUnderTest = App()

        assertThat(classUnderTest.greeting).isEqualTo("Hello World!")
    }

    @Test fun `greeting with Mockk`() {
        val classUnderTest = mockk<App>()
        every {classUnderTest.greeting } returns "Hello World!"
        val result = classUnderTest.greeting
        verify { classUnderTest.greeting }
        assertThat(result).isEqualTo("Hello World!")
    }

    @ParameterizedTest
    @ValueSource(strings = ["John", "Mary"])
    fun `greeting with junit params`(name:String) {
        val classUnderTest = App()

        assertThat(classUnderTest.greeting + name ).isEqualTo("Hello World!" + name)
    }
}
